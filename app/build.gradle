plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.panoramagl.sample"
        gradle.startParameter.taskNames.each {
            if (it.contains("cAT") || it.contains("AndroidTest")) {
                minSdkVersion 21
            } else {
                minSdkVersion 16
            }
        }
        targetSdkVersion 33
        versionCode getGitCommitCount()
        versionName getTag()

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }
        kotlinOptions {
            jvmTarget = '17'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments useTestStorageService: 'true'
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    namespace 'com.panoramagl.sample'
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation project(':library')
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.8.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.5"
    androidTestUtil "androidx.test.services:test-services:1.4.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.test:rules:1.5.0" // GrantPermissionRule
}

static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

static def getTag() {
    def process = "git describe --tags".execute()
    return process.text.toString().trim()
}
